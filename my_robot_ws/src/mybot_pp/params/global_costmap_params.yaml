# The "global_frame" parameter defines what coordinate frame the costmap should run in, in this case, we'll choose the /map frame.
# The "robot_base_frame" parameter defines the coordinate frame the costmap should reference for the base of the robot. 
# The "update_frequency" parameter determines the frequency, in Hz, at which the costmap will run its update loop. 
# The "static_map" parameter determines whether or not the costmap should initialize itself based on a map served by "map_server". 
# If you aren't using an existing map or map server, set the static_map parameter to false. 

global_costmap:
  global_frame: map
  robot_base_frame: chassis
  update_frequency: 10.0
  publish_frequency: 10.0
  static_map: true
  rolling_window: false
  width: 10.0
  height: 10.0
  resolution: 0.05
  transform_tolerance: 1.0
  footprint: [[-0.3, -0.25], [-0.3, 0.25], [0.3, 0.25], [0.3, -0.25]]
  
  plugins:
    - name: static_layer
      type: "costmap_2d::StaticLayer"
    - name: inflation_layer
      type: "costmap_2d::InflationLayer"
    - name: obstacle_layer
      type: "costmap_2d::ObstacleLayer"

  inflation_layer:
    enabled: true
    inflation_radius: 0.3
    cost_scaling_factor: 30.0

  obstacle_layer:
    enabled: true
    obstacle_range: 1.0
    raytrace_range: 10.0
    observation_sources: scan
    scan: {sensor_frame: rplidar_link, data_type: LaserScan, topic: scan, marking: true, clearing: true}
